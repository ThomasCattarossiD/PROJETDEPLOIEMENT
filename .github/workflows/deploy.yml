name: Deploy to GCP

env:
  GCP_PROJECT: durable-limiter-459106-k2      # Variable GitHub (ex: 'adspex-401215')
  REGION: europe-west1                        # Doit correspondre à la région GCP
  CLUSTER_NAME: adspex-cluster

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      # Étape 1 : Checkout du code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Étape 2 : Authentification GCP
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          create_credentials_file: true

      # Étape 3 : Configuration GCloud SDK
      - name: Set Up GCloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.GCP_PROJECT }}

      # Étape 4 : Configuration Docker
      - name: Configure Docker
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev --quiet

      # Étape 5 : Build & Push Frontend
      - name: Build and Push Frontend
        working-directory: frontend
        run: |
          docker build -t "${REGION}-docker.pkg.dev/$GCP_PROJECT/adspex-frontend-repo/frontend:$GITHUB_SHA" .
          docker push "${REGION}-docker.pkg.dev/$GCP_PROJECT/adspex-frontend-repo/frontend:$GITHUB_SHA"

      # Étape 6 : Build & Push Backend
      - name: Build and Push Backend
        working-directory: backend
        run: |
          docker build -t "${REGION}-docker.pkg.dev/$GCP_PROJECT/adspex-backend-repo/backend:$GITHUB_SHA" .
          docker push "${REGION}-docker.pkg.dev/$GCP_PROJECT/adspex-backend-repo/backend:$GITHUB_SHA"

      # Étape 7 : Déploiement Terraform (Infra)
      - name: Apply Terraform
        working-directory: infra
        run: |
          terraform init -upgrade
          terraform validate
          terraform apply -auto-approve

      # Étape 8 : Déploiement Kubernetes
      - name: Deploy to Kubernetes
        run: |
          gcloud container clusters get-credentials $CLUSTER_NAME --region $REGION
          kubectl apply -f k8s/
          kubectl rollout restart deployment/backend-deployment -n default
          kubectl rollout restart deployment/frontend-deployment -n default
